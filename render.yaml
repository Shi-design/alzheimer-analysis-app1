services:
  # ==========================
  # üåê FRONTEND (React)
  # ==========================
  - type: web
    runtime: static
    name: alz-frontend
    rootDir: frontend
    buildCommand: "npm install && npm run build"
    staticPublishPath: build          # change to 'dist' if Vite
    autoDeploy: true
    envVars:
      - key: REACT_APP_API_URL
        fromService:
          name: alz-backend
          type: web
          property: url

  # ==========================
  # ‚öôÔ∏è BACKEND (Node/Express)
  # ==========================
  - type: web
    runtime: node
    name: alz-backend
    rootDir: backend
    plan: free
    buildCommand: "npm install"
    startCommand: "npm start"
    autoDeploy: true
    healthCheckPath: /healthz
    envVars:
      - key: NODE_VERSION
        value: "18"
      - key: MONGODB_URI
        sync: false
      - key: JWT_SECRET
        sync: false
      - key: FRONTEND_ORIGIN
        fromService:
          name: alz-frontend
          type: web
          property: url
      - key: ML_API_URL
        fromService:
          name: alz-ml-api
          type: web
          property: url

  # ==========================
  # üß† ML API (Flask + TensorFlow)
  # ==========================
  - type: web
    runtime: python
    name: alz-ml-api
    rootDir: ml-api
    plan: free
    buildCommand: "pip install -r requirements.txt"
    startCommand: "gunicorn app:app --bind 0.0.0.0:$PORT --workers 1 --threads 4 --timeout 180"
    autoDeploy: true
    healthCheckPath: /healthz
    envVars:
      - key: PYTHON_VERSION
        value: "3.10"
